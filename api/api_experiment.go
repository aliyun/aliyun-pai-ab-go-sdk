/*
 * PAI-AB Server API
 *
 * PAI-AB Server API
 *
 * API version: 0.0.1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package api

import (
	"context"
	"strconv"

	"github.com/alibabacloud-go/paiabtest-20240119/client"
	"github.com/alibabacloud-go/tea/tea"
	"github.com/aliyun/aliyun-pai-ab-go-sdk/common"
	"github.com/aliyun/aliyun-pai-ab-go-sdk/swagger"
)

// Linger please
var (
	_ context.Context
)

type ExperimentApiService service

func (a *ExperimentApiService) ListExperiments(layerId, status int) ([]*swagger.Experiment, error) {
	var ret []*swagger.Experiment
	request := client.ListExperimentsRequest{
		LayerId: tea.String(strconv.Itoa(layerId)),
		All:     tea.Bool(true),
	}
	if status == common.ExpStatusRunning {
		request.SetStatus("Running")
	}
	response, err := a.client.ListExperiments(&request)
	if err != nil {
		return nil, err
	}

	for _, item := range response.Body.Experiments {
		if id, err := strconv.Atoi(*item.ExperimentId); err == nil {
			experiment := swagger.Experiment{
				ExpId:      int32(id),
				ExpLayerId: int32(layerId),
				ExpName:    *item.Name,
				StartTime:  *item.StartTime,
				EndTime:    *item.EndTime,
			}
			if item.DebugUsers != nil {
				experiment.DebugUsers = *item.DebugUsers
			}
			if item.CrowdIds != nil {
				experiment.DebugCrowdIds = *item.CrowdIds
			}
			if item.Status != nil {
				if *item.Status == "Running" {
					experiment.Status = common.ExpStatusRunning
				}

			}
			if item.BucketType != nil {
				if *item.BucketType == "Random" {
					experiment.BucketType = common.ExpBucketTypeRand
					experiment.ExperimentFlow = *item.Flow
					if item.Buckets != nil {
						experiment.Buckets = *item.Buckets
					}
				} else if *item.BucketType == "Condition" {
					experiment.BucketType = common.ExpBucketTypeCond
					experiment.Filter = *item.Condition
				}

			}

			ret = append(ret, &experiment)
		}
	}

	return ret, nil
}
